{
  "contractName": "ENSMigrationSubdomainRegistrar",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "migration",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registrarOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "label",
          "type": "bytes32"
        },
        {
          "name": "subdomain",
          "type": "string"
        }
      ],
      "name": "query",
      "outputs": [
        {
          "name": "domain",
          "type": "string"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "rent",
          "type": "uint256"
        },
        {
          "name": "referralFeePPM",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "label",
          "type": "bytes32"
        },
        {
          "name": "subdomain",
          "type": "string"
        },
        {
          "name": "_subdomainOwner",
          "type": "address"
        },
        {
          "name": "referrer",
          "type": "address"
        },
        {
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_migration",
          "type": "address"
        }
      ],
      "name": "setMigrationAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "label",
          "type": "bytes32"
        },
        {
          "name": "subdomain",
          "type": "string"
        }
      ],
      "name": "rentDue",
      "outputs": [
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stopped",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TLD_NODE",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "label",
          "type": "bytes32"
        },
        {
          "name": "subdomain",
          "type": "string"
        }
      ],
      "name": "payRent",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "referralFeePPM",
          "type": "uint256"
        },
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_transfer",
          "type": "address"
        }
      ],
      "name": "configureDomainFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "referralFeePPM",
          "type": "uint256"
        }
      ],
      "name": "configureDomain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "unlistDomain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "ens",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        }
      ],
      "name": "DomainTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "DomainConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "DomainUnlisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "subdomain",
          "type": "string"
        },
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "NewRegistration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "subdomain",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "expirationDate",
          "type": "uint256"
        }
      ],
      "name": "RentPaid",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "migrateSubdomain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"migrateSubdomain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migration\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrarOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"label\",\"type\":\"bytes32\"},{\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"query\",\"outputs\":[{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"rent\",\"type\":\"uint256\"},{\"name\":\"referralFeePPM\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"label\",\"type\":\"bytes32\"},{\"name\":\"subdomain\",\"type\":\"string\"},{\"name\":\"_subdomainOwner\",\"type\":\"address\"},{\"name\":\"referrer\",\"type\":\"address\"},{\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_migration\",\"type\":\"address\"}],\"name\":\"setMigrationAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"label\",\"type\":\"bytes32\"},{\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"rentDue\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TLD_NODE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"label\",\"type\":\"bytes32\"},{\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"payRent\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"referralFeePPM\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_transfer\",\"type\":\"address\"}],\"name\":\"configureDomainFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"referralFeePPM\",\"type\":\"uint256\"}],\"name\":\"configureDomain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"unlistDomain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ens\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"DomainTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"DomainConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"DomainUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"subdomain\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NewRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"subdomain\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"expirationDate\",\"type\":\"uint256\"}],\"name\":\"RentPaid\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implements an ENS registrar that sells subdomains on behalf of their owners. * Users may register a subdomain by calling `register` with the name of the domain they wish to register under, and the label hash of the subdomain they want to register. They must also specify the new owner of the domain, and the referrer, who is paid an optional finder's fee. The registrar then configures a simple default resolver, which resolves `addr` lookups to the new owner, and sets the `owner` account as the owner of the subdomain in ENS. * New domains may be added by calling `configureDomain`, then transferring ownership in the ENS registry to this contract. Ownership in the contract may be transferred using `transfer`, and a domain may be unlisted for sale using `unlistDomain`. There is (deliberately) no way to recover ownership in ENS once the name is transferred to this registrar. * Critically, this contract does not check one key property of a listed domain: * - Is the name UTS46 normalised? * User applications MUST check these two elements for each domain before offering them to users for registration. * Applications should additionally check that the domains they are offering to register are controlled by this registrar, since calls to `register` will fail if this is not the case.\",\"methods\":{\"configureDomain(string,uint256,uint256)\":{\"details\":\"Configures a domain for sale.\",\"params\":{\"name\":\"The name to configure.\",\"price\":\"The price in wei to charge for subdomain registrations\",\"referralFeePPM\":\"The referral fee to offer, in parts per million\"}},\"configureDomainFor(string,uint256,uint256,address,address)\":{\"details\":\"Configures a domain, optionally transferring it to a new owner.\",\"params\":{\"_owner\":\"The address to assign ownership of this domain to.\",\"_transfer\":\"The address to set as the transfer address for the name       when the permanent registrar is replaced. Can only be set to a non-zero       value once.\",\"name\":\"The name to configure.\",\"price\":\"The price in wei to charge for subdomain registrations.\",\"referralFeePPM\":\"The referral fee to offer, in parts per million.\"}},\"migrate(string)\":{\"details\":\"Migrates the domain to a new registrar.\",\"params\":{\"name\":\"The name of the domain to migrate.\"}},\"owner(bytes32)\":{\"details\":\"owner returns the address of the account that controls a domain.     Initially this is a null address. If the name has been     transferred to this contract, then the internal mapping is consulted     to determine who controls it. If the owner is not set,     the owner of the domain in the Registrar is returned.\",\"params\":{\"label\":\"The label hash of the deed to check.\"},\"return\":\"The address owning the deed.\"},\"query(bytes32,string)\":{\"details\":\"Returns information about a subdomain.\",\"params\":{\"label\":\"The label hash for the domain.\",\"subdomain\":\"The label for the subdomain.\"},\"return\":\"domain The name of the domain, or an empty string if the subdomain               is unavailable.price The price to register a subdomain, in wei.rent The rent to retain a subdomain, in wei per second.referralFeePPM The referral fee for the dapp, in ppm.\"},\"register(bytes32,string,address,address,address)\":{\"details\":\"Registers a subdomain.\",\"params\":{\"_subdomainOwner\":\"The account that should own the newly configured subdomain.\",\"label\":\"The label hash of the domain to register a subdomain of.\",\"referrer\":\"The address of the account to receive the referral fee.\",\"subdomain\":\"The desired subdomain label.\"}},\"setMigrationAddress(address)\":{\"details\":\"Sets the address where domains are migrated to.\",\"params\":{\"_migration\":\"Address of the new registrar.\"}},\"setResolver(string,address)\":{\"details\":\"Sets the resolver record for a name in ENS.\",\"params\":{\"name\":\"The name to set the resolver for.\",\"resolver\":\"The address of the resolver\"}},\"stop()\":{\"details\":\"Stops the registrar, disabling configuring of new domains.\"},\"transfer(string,address)\":{\"details\":\"Transfers internal control of a name to a new account. Does not update     ENS.\",\"params\":{\"name\":\"The name to transfer.\",\"newOwner\":\"The address of the new owner.\"}},\"unlistDomain(string)\":{\"details\":\"Unlists a domain May only be called by the owner.\",\"params\":{\"name\":\"The name of the domain to unlist.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@ensdomains/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol\":\"ENSMigrationSubdomainRegistrar\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens/contracts/Deed.sol\":{\"keccak256\":\"0x7b4abd2f65e2e093743077b899d0fb4952627ad7ff6104b840f9869f5baa5e96\",\"urls\":[\"bzzr://5b8d57c40a5f830516a6fb6d5e03a9293b0129a3bf49b8d48f69c2ec91f90a45\"]},\"@ensdomains/ens/contracts/ENS.sol\":{\"keccak256\":\"0x10b88673d8c180cd62523be4fec7607c65594eb4f0c561fa0fbc0784422b4871\",\"urls\":[\"bzzr://8e5a54eed92d9bf8824175cf337e0df46e647deb0864eb5f091ea0b8132568f6\"]},\"@ensdomains/ens/contracts/Registrar.sol\":{\"keccak256\":\"0xaef3f85ba0cf0544485d506a3f93719a90f8f28ef6c59f7175955768bec719bb\",\"urls\":[\"bzzr://3a050fc49ad88188f879d99ec1476383531ab62536c69babc22e2896908734ae\"]},\"@ensdomains/ethregistrar/contracts/BaseRegistrar.sol\":{\"keccak256\":\"0xd81cfc4a2a4d7ad49316f0c8ed589214af027b1b6f8078c30b51c5cc95269807\",\"urls\":[\"bzzr://aaf80291d353be11fc7cb695b729ec037958914e2597b1a29734eab9a300cc3a\"]},\"@ensdomains/subdomain-registrar/contracts/AbstractSubdomainRegistrar.sol\":{\"keccak256\":\"0x956a877538a83f7f4479a3e98d0918cfd1834440329780f67f0cd9ed399fb488\",\"urls\":[\"bzzr://f28f3cd33431169341af3e44eebd9d38e9c48c75788d59afca9c2ba6de042b78\"]},\"@ensdomains/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol\":{\"keccak256\":\"0x26e066371d73e0895286fd4a62c156c88508e1df2b5fe81fed6c1908931eeb17\",\"urls\":[\"bzzr://df58a1ce0f6a3bf9fd4b157ad2bb583e10a85f5c79963fa8d63ae65c34c7964b\"]},\"@ensdomains/subdomain-registrar/contracts/EthRegistrarSubdomainRegistrar.sol\":{\"keccak256\":\"0x7438e23612da3a7c3cdba5636d0e5d6c70703af4d22ae3cc90ec6a5a26612fa1\",\"urls\":[\"bzzr://dc912ce13a1480bbbc20738f2fbec2c7de116a371570804f3d528674e846d15b\"]},\"@ensdomains/subdomain-registrar/contracts/RegistrarInterface.sol\":{\"keccak256\":\"0x32eb0addc992b12a37b1fa94a5666bd540037419a3c02d2ba7537b556503d810\",\"urls\":[\"bzzr://f4715b593ce2e11f3eed23d6941450569d750e7451ae72715801e8abf38a8eb7\"]},\"@ensdomains/subdomain-registrar/contracts/Resolver.sol\":{\"keccak256\":\"0x4da4417de1daf1d66ee092b3cae0aeee2b5c591bfe881b006f80d2c4e582b790\",\"urls\":[\"bzzr://0abb45e2da461782e559f003098845a50152062cdf03f1fedd3b6481526f9b57\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xbbb6159006ae3639daea09f7d63987816d6cf3a99f52af919363e025d3abf3b8\",\"urls\":[\"bzzr://8368cc15cc427ce17e8f398860826b6332992cb23048b25f541dbc2a5f0df5d4\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1f059ee943273719130df645fa38069b792988e8b732585528d5b1265f5aa046\",\"urls\":[\"bzzr://5ca0242354a69ad26d8baa954cb650a56ed1f9c62bb32474a785c8327a77abfc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "1504:725:43:-;;;348:5:42;326:27;;;;;;;;;;;;;;;;;;;;1585:67:43;8:9:-1;5:2;;;30:1;27;20:12;5:2;1585:67:43;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1585:67:43;;;;;;;;;;;;;;;;1637:3;1795::44;869:4:42;863:3;;:10;;;;;;;;;;;;;;;;;;895:3;;;;;;;;;;;:9;;;253:66;905:8;;895:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:19:42;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;895:19:42;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;895:19:42;;;;;;;;;;;;;;;;883:9;;:31;;;;;;;;;;;;;;;;;;941:10;924:14;;:27;;;;;;;;;;;;;;;;;;824:134;1747:63:44;1585:67:43;1504:725;;;;;;",
  "deployedSourceMap": "1504:725:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:243:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1568:243:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1568:243:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:236:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2291:236:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2291:236:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2979:87:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2979:87:42;;;;;;1658:408:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1658:408:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1658:408:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:24:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:24:42;;;;;;;;;;;;;;;;;;;;;;;;;;;359:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;359:29:42;;;;;;;;;;;;;;;;;;;;;;;;;;;425:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;425:24:42;;;;;;;;;;;;;;;;;;;;;;;;;;;5383:518:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5383:518:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5383:518:44;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5383:518:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5383:518:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5383:518:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5383:518:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:14:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:14:42;;;;;;;;;;;;;;;;;;;;;;;;;;;6257:1651:44;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6257:1651:44;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6257:1651:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6257:1651:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6257:1651:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3203:142:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3203:142:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3203:142:42;;;;;;;;;;;;;;;;;;;;;;7914:188:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7914:188:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7914:188:44;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7914:188:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7914:188:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7914:188:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:266:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2187:266:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2187:266:42;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2187:266:42;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2187:266:42;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2187:266:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2187:266:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;326:27:42;;;;;;;;;;;;;;;;;;;;;;;;;;;218:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:101:42;;;;;;;;;;;;;;;;;;;;;;;8230:620:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8230:620:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8230:620:44;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8230:620:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8230:620:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8230:620:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8230:620:44;;;;;;;;;;;;;;;;;;8856:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8856:101:44;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8856:101:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8856:101:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8856:101:44;;;;;;;;;;;;;;;3569:858;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3569:858:44;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3569:858:44;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3569:858:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3569:858:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3569:858:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3569:858:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:175:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2711:175:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2711:175:42;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2711:175:42;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2711:175:42;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2711:175:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2711:175:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4571:311:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4571:311:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4571:311:44;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4571:311:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4571:311:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4571:311:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4571:311:44;;;;;;;;;;;;;;;;;;3351:115:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3351:115:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3351:115:42;;;;;;;;;;;;;;;;;;;;;;2743:268:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2743:268:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2743:268:44;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2743:268:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2743:268:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2743:268:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2743:268:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:243:42;1636:4;1689:10;1674:25;;:11;:25;;;;1673:99;;;;1761:10;1746:25;;:11;:25;;;;1673:99;1652:152;;1568:243;;;:::o;2291:236:44:-;2342:7;2397:3;2365:36;;:7;:14;2373:5;2365:14;;;;;;;;;;;:20;;;;;;;;;;;;:36;;;;2361:94;;;2424:7;:14;2432:5;2424:14;;;;;;;;;;;:20;;;;;;;;;;;;2417:27;;;;2361:94;2486:9;;;;;;;;;;;2472:32;;;2513:5;2505:14;;;2472:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2472:48:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2472:48:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2472:48:44;;;;;;;;;;;;;;;;2465:55;;2291:236;;;;:::o;2979:87:42:-;623:7;;;;;;;;;;;622:8;614:17;;;;;;;;719:14;;;;;;;;;;;705:28;;:10;:28;;;697:37;;;;;;;;3055:4;3045:7;;:14;;;;;;;;;;;;;;;;;;2979:87::o;1658:408:43:-;1732:15;1777:4;1783:5;1760:29;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1760:29:43;;;1750:40;;;;;;1732:58;;1800:16;1819:3;;;;;;;;;;;:9;;;1829:7;1819:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1819:18:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1819:18:43;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1819:18:43;;;;;;;;;;;;;;;;1800:37;;1917:20;1928:8;1917:10;:20::i;:::-;1916:21;:47;;;;1955:8;1941:22;;:10;:22;;;1916:47;1908:56;;;;;;;;1975:3;;;;;;;;;;;:20;;;1996:4;2002:5;2009:8;2019:3;;;;;;;;;;;:12;;;2032:7;2019:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2019:21:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2019:21:43;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2019:21:43;;;;;;;;;;;;;;;;2042:3;;;;;;;;;;;:7;;;2050;2042:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2042:16:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2042:16:43;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2042:16:43;;;;;;;;;;;;;;;;1975:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1975:84:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1975:84:43;;;;1658:408;;;;:::o;394:24:42:-;;;;;;;;;;;;;:::o;359:29::-;;;;;;;;;;;;;:::o;425:24::-;;;;;;;;;;;;;:::o;5383:518:44:-;5463:20;5485:10;5497:9;5508:19;5539:12;253:66:42;5581:8:44;;5591:5;5564:33;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5564:33:44;;;5554:44;;;;;;5539:59;;5608:15;5653:4;5675:9;;5659:27;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;5659:27:44;;;;;;;;;;;;;5636:51;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5636:51:44;;;5626:62;;;;;;5608:80;;5733:3;5703:34;;:3;;;;;;;;;;;:9;;;5713:7;5703:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5703:18:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5703:18:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5703:18:44;;;;;;;;;;;;;;;;:34;;;;5699:85;;;5765:1;5768;5771;5753:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5699:85;5794:19;5816:7;:14;5824:5;5816:14;;;;;;;;;;;5794:36;;5848:4;:9;;5859:4;:10;;;5871:1;5874:4;:19;;;5840:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5383:518;;;;;;;;:::o;456:14:42:-;;;;;;;;;;;;;:::o;6257:1651:44:-;623:7:42;;;;;;;;;;;622:8;614:17;;;;;;;;6425:22:44;6450:15;6425:40;;6475:18;253:66:42;6523:8:44;;6533:5;6506:33;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6506:33:44;;;6496:44;;;;;;6475:65;;6550:22;6591:9;;6575:27;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;6575:27:44;;;;;;;;;;;;;6550:52;;6752:1;6674:80;;:3;;;;;;;;;;;:9;;;6711:10;6723:14;6694:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6694:44:44;;;6684:55;;;;;;6674:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6674:66:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6674:66:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6674:66:44;;;;;;;;;;;;;;;;:80;;;6666:89;;;;;;;;6766:21;6790:7;:14;6798:5;6790:14;;;;;;;;;;;6766:38;;6909:5;6892:6;:11;;6876:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;6868:47;;;;;;;;6985:6;:12;;;6972:9;:25;;6964:34;;;;;;;;7056:6;:12;;;7044:9;:24;7040:100;;;7084:10;:19;;:45;7116:6;:12;;;7104:9;:24;7084:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7084:45:44;7040:100;7183:13;7199:6;:12;;;7183:28;;7249:1;7225:6;:21;;;:25;:53;;;;;7274:3;7254:24;;:8;:24;;;;7225:53;:81;;;;;7294:6;:12;;;;;;;;;;;;7282:24;;:8;:24;;;;7225:81;7221:260;;;7322:19;7385:7;7360:6;:21;;;7345:6;:12;;;:36;7344:48;;;;;;;;7322:70;;7406:8;:17;;:30;7424:11;7406:30;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7406:30:44;7459:11;7450:20;;;;7221:260;;7540:1;7532:5;:9;7528:68;;;7557:6;:12;;;;;;;;;;;;:21;;:28;7579:5;7557:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7557:28:44;7528:68;7667:3;7641:30;;:14;:30;;;7637:88;;;7704:10;7687:27;;7637:88;7734:78;7749:10;7761:14;7777;7802:8;7734:14;:78::i;:::-;7878:8;7828:73;;7862:14;7828:73;;7844:5;7828:73;7851:9;;7888:6;:12;;;7828:73;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7828:73:44;;;;;;;;;;;;;;;641:1:42;;;;;6257:1651:44;;;;;;:::o;3203:142:42:-;719:14;;;;;;;;;;;705:28;;:10;:28;;;697:37;;;;;;;;3298:7;;;;;;;;;;;3290:16;;;;;;;;3328:10;3316:9;;:22;;;;;;;;;;;;;;;;;;3203:142;:::o;7914:188:44:-;7996:14;8029:66;8022:73;;7914:188;;;;;:::o;2187:266:42:-;2280:4;2264:22;;;;;;546:10;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;;;2298:13;2330:4;2314:22;;;;;;2298:38;;2346:12;253:66;2388:8;;2398:5;2371:33;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2371:33:42;;;2361:44;;;;;;2346:59;;2415:3;;;;;;;;;;;:15;;;2431:4;2437:8;2415:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2415:31:42;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2415:31:42;;;;567:1;;2187:266;;;:::o;326:27::-;;;;;;;;;;;;;:::o;218:101::-;253:66;218:101;;;:::o;8230:620:44:-;8301:4;8285:22;;;;;;546:10:42;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;;;8327:7:44;;;;;;;;;;;8319:16;;;;;;;;8374:3;8353:25;;:9;;;;;;;;;;;:25;;;;8345:34;;;;;;;;8390:13;8422:4;8406:22;;;;;;8390:38;;8438:21;8462:7;:14;8470:5;8462:14;;;;;;;;;;;8438:38;;8501:9;;;;;;;;;;;8487:32;;;8520:9;;;;;;;;;;;8539:5;8531:14;;;8487:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8487:59:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8487:59:44;;;;8588:9;;;;;;;;;;;8557:60;;;8631:6;:11;;8656:6;:12;;;8682:6;:21;;;8717:6;:12;;;;;;;;;;;;8751:3;8557:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8557:208:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8557:208:44;;;;8783:7;:14;8791:5;8783:14;;;;;;;;;;;;8776:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8831:5;8813:30;8838:4;8813:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8813:30:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:1:42;;8230:620:44;;:::o;8856:101::-;8942:8;;;3569:858;3727:4;3711:22;;;;;;546:10:42;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;;;3745:13:44;3777:4;3761:22;;;;;;3745:38;;3793:21;3817:7;:14;3825:5;3817:14;;;;;;;;;;;3793:38;;3906:4;3846:65;;3860:9;;;;;;;;;;;3846:32;;;3887:5;3879:14;;;3846:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3846:48:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3846:48:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3846:48:44;;;;;;;;;;;;;;;;:65;;;;3842:253;;;3941:9;;;;;;;;;;;3927:37;;;3965:10;3985:4;4000:5;3992:14;;;3927:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3927:80:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3927:80:44;;;;4035:9;;;;;;;;;;;4021:32;;;4062:5;4054:14;;;4078:4;4021:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4021:63:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4021:63:44;;;;3842:253;4125:6;4109:22;;:6;:12;;;;;;;;;;;;:22;;;;4105:74;;;4162:6;4147;:12;;;:21;;;;;;;;;;;;;;;;;;4105:74;4226:5;4209:6;:11;;4193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;4189:114;;;4288:4;4274:6;:11;;:18;;;;;;;;;;;;:::i;:::-;;4189:114;4328:5;4313:6;:12;;:20;;;;4367:14;4343:6;:21;;:38;;;;4414:5;4397:23;;;;;;;;;;567:1:42;;3569:858:44;;;;;;:::o;2711:175:42:-;2806:73;2825:4;2831:5;2838:14;2854:10;2874:3;2806:18;:73::i;:::-;2711:175;;;:::o;4571:311:44:-;4647:4;4631:22;;;;;;546:10:42;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;;;4665:13:44;4697:4;4681:22;;;;;;4665:38;;4713:21;4737:7;:14;4745:5;4737:14;;;;;;;;;;;4713:38;;4781:5;4766:21;;;;;;;;;;4798:16;;;;;;;;;;;;;:6;:11;;:16;;;;;;;;;;;;:::i;:::-;;4839:1;4824:6;:12;;:16;;;;4874:1;4850:6;:21;;:25;;;;567:1:42;;4571:311:44;;:::o;3351:115:42:-;719:14;;;;;;;;;;;705:28;;:10;:28;;;697:37;;;;;;;;3451:8;3434:14;;:25;;;;;;;;;;;;;;;;;;3351:115;:::o;2743:268:44:-;2841:4;2825:22;;;;;;546:10:42;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;;;2859:13:44;2891:4;2875:22;;;;;;2859:38;;2954:8;2912:51;;2932:7;:14;2940:5;2932:14;;;;;;;;;;;:20;;;;;;;;;;;;2912:51;;2925:5;2912:51;;;;;;;;;;2996:8;2973:7;:14;2981:5;2973:14;;;;;;;;;;;:20;;;:31;;;;;;;;;;;;;;;;;;567:1:42;2743:268:44;;;:::o;2072:155:43:-;2123:4;2139:9;2189:4;2177:17;2169:25;;2219:1;2212:4;:8;2205:15;;;2072:155;;;:::o;964:598:42:-;1131:3;;;;;;;;;;;:19;;;1151:4;1157:5;1172:4;1131:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:47:42;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1131:47:42;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1131:47:42;;;;;;;;;;;;;;;;;1189:15;1234:4;1240:5;1217:29;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1217:29:42;;;1207:40;;;;;;1189:58;;1297:3;;;;;;;;;;;:15;;;1313:7;1330:8;1297:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1297:43:42;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1297:43:42;;;;1401:8;:16;;;1418:7;1427:14;1401:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:41:42;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1401:41:42;;;;1518:3;;;;;;;;;;;:12;;;1531:7;1540:14;1518:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1518:37:42;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1518:37:42;;;;964:598;;;;;:::o;1504:725:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@ensdomains/ethregistrar/contracts/BaseRegistrar.sol\";\nimport \"./EthRegistrarSubdomainRegistrar.sol\";\n\n/**\n * @dev Implements an ENS registrar that sells subdomains on behalf of their owners.\n *\n * Users may register a subdomain by calling `register` with the name of the domain\n * they wish to register under, and the label hash of the subdomain they want to\n * register. They must also specify the new owner of the domain, and the referrer,\n * who is paid an optional finder's fee. The registrar then configures a simple\n * default resolver, which resolves `addr` lookups to the new owner, and sets\n * the `owner` account as the owner of the subdomain in ENS.\n *\n * New domains may be added by calling `configureDomain`, then transferring\n * ownership in the ENS registry to this contract. Ownership in the contract\n * may be transferred using `transfer`, and a domain may be unlisted for sale\n * using `unlistDomain`. There is (deliberately) no way to recover ownership\n * in ENS once the name is transferred to this registrar.\n *\n * Critically, this contract does not check one key property of a listed domain:\n *\n * - Is the name UTS46 normalised?\n *\n * User applications MUST check these two elements for each domain before\n * offering them to users for registration.\n *\n * Applications should additionally check that the domains they are offering to\n * register are controlled by this registrar, since calls to `register` will\n * fail if this is not the case.\n */\ncontract ENSMigrationSubdomainRegistrar is EthRegistrarSubdomainRegistrar {\n\n    constructor(ENS ens) EthRegistrarSubdomainRegistrar(ens) public { }\n\n    function migrateSubdomain(bytes32 node, bytes32 label) external {\n        bytes32 subnode = keccak256(abi.encodePacked(node, label));\n        address previous = ens.owner(subnode);\n\n        // only allow a contract to run their own migration\n        require(!isContract(previous) || msg.sender == previous);\n\n        ens.setSubnodeRecord(node, label, previous, ens.resolver(subnode), ens.ttl(subnode));\n    }\n\n    function isContract(address addr) private returns (bool) {\n        uint size;\n        assembly { size := extcodesize(addr) }\n        return size > 0;\n    }\n}\n",
  "sourcePath": "@ensdomains/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol",
  "ast": {
    "absolutePath": "@ensdomains/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol",
    "exportedSymbols": {
      "ENSMigrationSubdomainRegistrar": [
        10737
      ]
    },
    "id": 10738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10654,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "file": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "id": 10655,
        "nodeType": "ImportDirective",
        "scope": 10738,
        "sourceUnit": 8694,
        "src": "25:62:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/subdomain-registrar/contracts/EthRegistrarSubdomainRegistrar.sol",
        "file": "./EthRegistrarSubdomainRegistrar.sol",
        "id": 10656,
        "nodeType": "ImportDirective",
        "scope": 10738,
        "sourceUnit": 11361,
        "src": "88:46:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10657,
              "name": "EthRegistrarSubdomainRegistrar",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11360,
              "src": "1547:30:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthRegistrarSubdomainRegistrar_$11360",
                "typeString": "contract EthRegistrarSubdomainRegistrar"
              }
            },
            "id": 10658,
            "nodeType": "InheritanceSpecifier",
            "src": "1547:30:43"
          }
        ],
        "contractDependencies": [
          10652,
          11360,
          11445
        ],
        "contractKind": "contract",
        "documentation": "@dev Implements an ENS registrar that sells subdomains on behalf of their owners.\n * Users may register a subdomain by calling `register` with the name of the domain\nthey wish to register under, and the label hash of the subdomain they want to\nregister. They must also specify the new owner of the domain, and the referrer,\nwho is paid an optional finder's fee. The registrar then configures a simple\ndefault resolver, which resolves `addr` lookups to the new owner, and sets\nthe `owner` account as the owner of the subdomain in ENS.\n * New domains may be added by calling `configureDomain`, then transferring\nownership in the ENS registry to this contract. Ownership in the contract\nmay be transferred using `transfer`, and a domain may be unlisted for sale\nusing `unlistDomain`. There is (deliberately) no way to recover ownership\nin ENS once the name is transferred to this registrar.\n * Critically, this contract does not check one key property of a listed domain:\n * - Is the name UTS46 normalised?\n * User applications MUST check these two elements for each domain before\noffering them to users for registration.\n * Applications should additionally check that the domains they are offering to\nregister are controlled by this registrar, since calls to `register` will\nfail if this is not the case.",
        "fullyImplemented": true,
        "id": 10737,
        "linearizedBaseContracts": [
          10737,
          11360,
          10652,
          11445
        ],
        "name": "ENSMigrationSubdomainRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10666,
              "nodeType": "Block",
              "src": "1649:3:43",
              "statements": []
            },
            "documentation": null,
            "id": 10667,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10663,
                    "name": "ens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10660,
                    "src": "1637:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$6413",
                      "typeString": "contract ENS"
                    }
                  }
                ],
                "id": 10664,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10662,
                  "name": "EthRegistrarSubdomainRegistrar",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11360,
                  "src": "1606:30:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_EthRegistrarSubdomainRegistrar_$11360_$",
                    "typeString": "type(contract EthRegistrarSubdomainRegistrar)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1606:35:43"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10660,
                  "name": "ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 10667,
                  "src": "1597:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$6413",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10659,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6413,
                    "src": "1597:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$6413",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1596:9:43"
            },
            "returnParameters": {
              "id": 10665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:0:43"
            },
            "scope": 10737,
            "src": "1585:67:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10719,
              "nodeType": "Block",
              "src": "1722:344:43",
              "statements": [
                {
                  "assignments": [
                    10675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10675,
                      "name": "subnode",
                      "nodeType": "VariableDeclaration",
                      "scope": 10719,
                      "src": "1732:15:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10674,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1732:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10683,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10679,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10669,
                            "src": "1777:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 10680,
                            "name": "label",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10671,
                            "src": "1783:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10677,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12561,
                            "src": "1760:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1760:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1760:29:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10676,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12568,
                      "src": "1750:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:40:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1732:58:43"
                },
                {
                  "assignments": [
                    10685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10685,
                      "name": "previous",
                      "nodeType": "VariableDeclaration",
                      "scope": 10719,
                      "src": "1800:16:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10684,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10688,
                        "name": "subnode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10675,
                        "src": "1829:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10686,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10366,
                        "src": "1819:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$6413",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 10687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6382,
                      "src": "1819:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 10689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1800:37:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1916:21:43",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10693,
                                "name": "previous",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10685,
                                "src": "1928:8:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10692,
                              "name": "isContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10736,
                              "src": "1917:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 10694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1917:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10696,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12574,
                              "src": "1941:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1941:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 10698,
                            "name": "previous",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10685,
                            "src": "1955:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1941:22:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1916:47:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12577,
                      "src": "1908:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:56:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10702,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:56:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10706,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10669,
                        "src": "1996:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10707,
                        "name": "label",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10671,
                        "src": "2002:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10708,
                        "name": "previous",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10685,
                        "src": "2009:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10711,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10675,
                            "src": "2032:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10709,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10366,
                            "src": "2019:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$6413",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 10710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6389,
                          "src": "2019:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 10712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2019:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10715,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10675,
                            "src": "2050:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10713,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10366,
                            "src": "2042:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$6413",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 10714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ttl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6396,
                          "src": "2042:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint64_$",
                            "typeString": "function (bytes32) view external returns (uint64)"
                          }
                        },
                        "id": 10716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10703,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10366,
                        "src": "1975:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$6413",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 10705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSubnodeRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6336,
                      "src": "1975:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address,address,uint64) external"
                      }
                    },
                    "id": 10717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:84:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10718,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:84:43"
                }
              ]
            },
            "documentation": null,
            "id": 10720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateSubdomain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10669,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 10720,
                  "src": "1684:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10671,
                  "name": "label",
                  "nodeType": "VariableDeclaration",
                  "scope": 10720,
                  "src": "1698:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10670,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:29:43"
            },
            "returnParameters": {
              "id": 10673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:43"
            },
            "scope": 10737,
            "src": "1658:408:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10735,
              "nodeType": "Block",
              "src": "2129:98:43",
              "statements": [
                {
                  "assignments": [
                    10728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10728,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 10735,
                      "src": "2139:9:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10727,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2139:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10729,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2139:9:43"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 10728,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2169:4:43",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 10722,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2189:4:43",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10730,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(addr)\n}",
                  "src": "2158:53:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10731,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10728,
                      "src": "2212:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2219:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2212:8:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10726,
                  "id": 10734,
                  "nodeType": "Return",
                  "src": "2205:15:43"
                }
              ]
            },
            "documentation": null,
            "id": 10736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10722,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 10736,
                  "src": "2092:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:14:43"
            },
            "returnParameters": {
              "id": 10726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10725,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10736,
                  "src": "2123:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:6:43"
            },
            "scope": 10737,
            "src": "2072:155:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 10738,
        "src": "1504:725:43"
      }
    ],
    "src": "0:2230:43"
  },
  "legacyAST": {
    "absolutePath": "@ensdomains/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol",
    "exportedSymbols": {
      "ENSMigrationSubdomainRegistrar": [
        10737
      ]
    },
    "id": 10738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10654,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "file": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "id": 10655,
        "nodeType": "ImportDirective",
        "scope": 10738,
        "sourceUnit": 8694,
        "src": "25:62:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/subdomain-registrar/contracts/EthRegistrarSubdomainRegistrar.sol",
        "file": "./EthRegistrarSubdomainRegistrar.sol",
        "id": 10656,
        "nodeType": "ImportDirective",
        "scope": 10738,
        "sourceUnit": 11361,
        "src": "88:46:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10657,
              "name": "EthRegistrarSubdomainRegistrar",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11360,
              "src": "1547:30:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthRegistrarSubdomainRegistrar_$11360",
                "typeString": "contract EthRegistrarSubdomainRegistrar"
              }
            },
            "id": 10658,
            "nodeType": "InheritanceSpecifier",
            "src": "1547:30:43"
          }
        ],
        "contractDependencies": [
          10652,
          11360,
          11445
        ],
        "contractKind": "contract",
        "documentation": "@dev Implements an ENS registrar that sells subdomains on behalf of their owners.\n * Users may register a subdomain by calling `register` with the name of the domain\nthey wish to register under, and the label hash of the subdomain they want to\nregister. They must also specify the new owner of the domain, and the referrer,\nwho is paid an optional finder's fee. The registrar then configures a simple\ndefault resolver, which resolves `addr` lookups to the new owner, and sets\nthe `owner` account as the owner of the subdomain in ENS.\n * New domains may be added by calling `configureDomain`, then transferring\nownership in the ENS registry to this contract. Ownership in the contract\nmay be transferred using `transfer`, and a domain may be unlisted for sale\nusing `unlistDomain`. There is (deliberately) no way to recover ownership\nin ENS once the name is transferred to this registrar.\n * Critically, this contract does not check one key property of a listed domain:\n * - Is the name UTS46 normalised?\n * User applications MUST check these two elements for each domain before\noffering them to users for registration.\n * Applications should additionally check that the domains they are offering to\nregister are controlled by this registrar, since calls to `register` will\nfail if this is not the case.",
        "fullyImplemented": true,
        "id": 10737,
        "linearizedBaseContracts": [
          10737,
          11360,
          10652,
          11445
        ],
        "name": "ENSMigrationSubdomainRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10666,
              "nodeType": "Block",
              "src": "1649:3:43",
              "statements": []
            },
            "documentation": null,
            "id": 10667,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10663,
                    "name": "ens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10660,
                    "src": "1637:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$6413",
                      "typeString": "contract ENS"
                    }
                  }
                ],
                "id": 10664,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10662,
                  "name": "EthRegistrarSubdomainRegistrar",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11360,
                  "src": "1606:30:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_EthRegistrarSubdomainRegistrar_$11360_$",
                    "typeString": "type(contract EthRegistrarSubdomainRegistrar)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1606:35:43"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10660,
                  "name": "ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 10667,
                  "src": "1597:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$6413",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10659,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6413,
                    "src": "1597:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$6413",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1596:9:43"
            },
            "returnParameters": {
              "id": 10665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:0:43"
            },
            "scope": 10737,
            "src": "1585:67:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10719,
              "nodeType": "Block",
              "src": "1722:344:43",
              "statements": [
                {
                  "assignments": [
                    10675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10675,
                      "name": "subnode",
                      "nodeType": "VariableDeclaration",
                      "scope": 10719,
                      "src": "1732:15:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10674,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1732:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10683,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10679,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10669,
                            "src": "1777:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 10680,
                            "name": "label",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10671,
                            "src": "1783:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10677,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12561,
                            "src": "1760:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1760:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1760:29:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10676,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12568,
                      "src": "1750:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:40:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1732:58:43"
                },
                {
                  "assignments": [
                    10685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10685,
                      "name": "previous",
                      "nodeType": "VariableDeclaration",
                      "scope": 10719,
                      "src": "1800:16:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10684,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10688,
                        "name": "subnode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10675,
                        "src": "1829:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10686,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10366,
                        "src": "1819:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$6413",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 10687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6382,
                      "src": "1819:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 10689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1800:37:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1916:21:43",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10693,
                                "name": "previous",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10685,
                                "src": "1928:8:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10692,
                              "name": "isContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10736,
                              "src": "1917:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 10694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1917:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10696,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12574,
                              "src": "1941:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1941:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 10698,
                            "name": "previous",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10685,
                            "src": "1955:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1941:22:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1916:47:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12577,
                      "src": "1908:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:56:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10702,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:56:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10706,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10669,
                        "src": "1996:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10707,
                        "name": "label",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10671,
                        "src": "2002:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10708,
                        "name": "previous",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10685,
                        "src": "2009:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10711,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10675,
                            "src": "2032:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10709,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10366,
                            "src": "2019:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$6413",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 10710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6389,
                          "src": "2019:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 10712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2019:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10715,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10675,
                            "src": "2050:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10713,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10366,
                            "src": "2042:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$6413",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 10714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ttl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6396,
                          "src": "2042:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint64_$",
                            "typeString": "function (bytes32) view external returns (uint64)"
                          }
                        },
                        "id": 10716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10703,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10366,
                        "src": "1975:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$6413",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 10705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSubnodeRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6336,
                      "src": "1975:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address,address,uint64) external"
                      }
                    },
                    "id": 10717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:84:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10718,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:84:43"
                }
              ]
            },
            "documentation": null,
            "id": 10720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateSubdomain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10669,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 10720,
                  "src": "1684:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10671,
                  "name": "label",
                  "nodeType": "VariableDeclaration",
                  "scope": 10720,
                  "src": "1698:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10670,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:29:43"
            },
            "returnParameters": {
              "id": 10673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:43"
            },
            "scope": 10737,
            "src": "1658:408:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10735,
              "nodeType": "Block",
              "src": "2129:98:43",
              "statements": [
                {
                  "assignments": [
                    10728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10728,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 10735,
                      "src": "2139:9:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10727,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2139:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10729,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2139:9:43"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 10728,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2169:4:43",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 10722,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2189:4:43",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10730,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(addr)\n}",
                  "src": "2158:53:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10731,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10728,
                      "src": "2212:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2219:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2212:8:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10726,
                  "id": 10734,
                  "nodeType": "Return",
                  "src": "2205:15:43"
                }
              ]
            },
            "documentation": null,
            "id": 10736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10722,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 10736,
                  "src": "2092:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:14:43"
            },
            "returnParameters": {
              "id": 10726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10725,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10736,
                  "src": "2123:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:6:43"
            },
            "scope": 10737,
            "src": "2072:155:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 10738,
        "src": "1504:725:43"
      }
    ],
    "src": "0:2230:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2020-01-30T01:59:25.916Z",
  "devdoc": {
    "details": "Implements an ENS registrar that sells subdomains on behalf of their owners. * Users may register a subdomain by calling `register` with the name of the domain they wish to register under, and the label hash of the subdomain they want to register. They must also specify the new owner of the domain, and the referrer, who is paid an optional finder's fee. The registrar then configures a simple default resolver, which resolves `addr` lookups to the new owner, and sets the `owner` account as the owner of the subdomain in ENS. * New domains may be added by calling `configureDomain`, then transferring ownership in the ENS registry to this contract. Ownership in the contract may be transferred using `transfer`, and a domain may be unlisted for sale using `unlistDomain`. There is (deliberately) no way to recover ownership in ENS once the name is transferred to this registrar. * Critically, this contract does not check one key property of a listed domain: * - Is the name UTS46 normalised? * User applications MUST check these two elements for each domain before offering them to users for registration. * Applications should additionally check that the domains they are offering to register are controlled by this registrar, since calls to `register` will fail if this is not the case.",
    "methods": {
      "configureDomain(string,uint256,uint256)": {
        "details": "Configures a domain for sale.",
        "params": {
          "name": "The name to configure.",
          "price": "The price in wei to charge for subdomain registrations",
          "referralFeePPM": "The referral fee to offer, in parts per million"
        }
      },
      "configureDomainFor(string,uint256,uint256,address,address)": {
        "details": "Configures a domain, optionally transferring it to a new owner.",
        "params": {
          "_owner": "The address to assign ownership of this domain to.",
          "_transfer": "The address to set as the transfer address for the name       when the permanent registrar is replaced. Can only be set to a non-zero       value once.",
          "name": "The name to configure.",
          "price": "The price in wei to charge for subdomain registrations.",
          "referralFeePPM": "The referral fee to offer, in parts per million."
        }
      },
      "migrate(string)": {
        "details": "Migrates the domain to a new registrar.",
        "params": {
          "name": "The name of the domain to migrate."
        }
      },
      "owner(bytes32)": {
        "details": "owner returns the address of the account that controls a domain.     Initially this is a null address. If the name has been     transferred to this contract, then the internal mapping is consulted     to determine who controls it. If the owner is not set,     the owner of the domain in the Registrar is returned.",
        "params": {
          "label": "The label hash of the deed to check."
        },
        "return": "The address owning the deed."
      },
      "query(bytes32,string)": {
        "details": "Returns information about a subdomain.",
        "params": {
          "label": "The label hash for the domain.",
          "subdomain": "The label for the subdomain."
        },
        "return": "domain The name of the domain, or an empty string if the subdomain               is unavailable.price The price to register a subdomain, in wei.rent The rent to retain a subdomain, in wei per second.referralFeePPM The referral fee for the dapp, in ppm."
      },
      "register(bytes32,string,address,address,address)": {
        "details": "Registers a subdomain.",
        "params": {
          "_subdomainOwner": "The account that should own the newly configured subdomain.",
          "label": "The label hash of the domain to register a subdomain of.",
          "referrer": "The address of the account to receive the referral fee.",
          "subdomain": "The desired subdomain label."
        }
      },
      "setMigrationAddress(address)": {
        "details": "Sets the address where domains are migrated to.",
        "params": {
          "_migration": "Address of the new registrar."
        }
      },
      "setResolver(string,address)": {
        "details": "Sets the resolver record for a name in ENS.",
        "params": {
          "name": "The name to set the resolver for.",
          "resolver": "The address of the resolver"
        }
      },
      "stop()": {
        "details": "Stops the registrar, disabling configuring of new domains."
      },
      "transfer(string,address)": {
        "details": "Transfers internal control of a name to a new account. Does not update     ENS.",
        "params": {
          "name": "The name to transfer.",
          "newOwner": "The address of the new owner."
        }
      },
      "unlistDomain(string)": {
        "details": "Unlists a domain May only be called by the owner.",
        "params": {
          "name": "The name of the domain to unlist."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}